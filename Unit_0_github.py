# -*- coding: utf-8 -*-
"""Проект 0-GitHUB.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YOm0SV3Dm8y26F9k5t3KWpEhyCngskGK

Первый проект "Проект 0. GitHub. Самый быстрый старт"
"""

import numpy as np

# задаем функцию для упрощения проверки совпадения: загадали-угадали
print ("number=", number)

def game_core_v1(number):
# Сначала устанавливаем любое random число, 
# а потом уменьшаем или увеличиваем его в зависимости от того, больше оно или меньше нужного. 
# Функция принимает загаданное число и возвращает число попыток
  count = 1
  predict = np.random.randint(1,101)

# в цикле осуществляем проверку: угадали или не угадали
# ВАРИАНТ А:
  while number !=predict:
    count+=1
    if number > predict:
      predict += 1
    elif number < predict:
      predict -= 1
  return(count) # выход из цикла, если угадали

# ВАРИАНТ Б: ускоряем проверку: проверяем только четные значения
#    if predict % 2 == 0:
#      if number > predict:
#        predict += 1
#      elif number < predict:
#        predict -= 1
#    else: break
#  return(count) # выход из цикла, если угадали

def score_game(game_core):
  print(f"Запускаем игру 1000 раз, чтобы узнать, как быстро игра угадывает число")
  count_ls = []
  np.random.seed(1)  # фиксируем RANDOM SEED, чтобы ваш эксперимент был воспроизводим!
  random_array = np.random.randint(1,101, size=(1000))
  for number in random_array:
    count_ls.append(game_core(number))
  score = int(np.mean(count_ls))
  print(f"Ваш алгоритм угадывает число в среднем за {score} попыток")
  return(score)

# Запускаем
score_game(game_core_v1)

